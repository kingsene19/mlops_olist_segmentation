name: MLOps CI/CD Pipeline

on:
  push: 
      branches: [main]
  pull_request:
      branches: [main]

jobs:
  verify:
    runs-on: ubuntu-latest
    container: python:3.9-slim
    steps:
    - uses: actions/checkout@v4
    - name: Setup VM
      run: apt-get -y update
    - name: Install dependencies
      run: |
        pip install pip --upgrade
        pip install -r requirements-tests.txt
    - name: Verify linting
      run: ruff check . --fix
    - name: Verify formatting
      run: black . --check
    - name: Tests
      run: pytest tests
    
  run-notebooks:
    runs-on: ubuntu-latest
    container: python:3.9-slim
    needs: verify
    steps:
    - uses: actions/checkout@v4
    - name: Setup VM
      run: apt-get -y update && apt-get install -y git
    - name: Install dependencies
      run: |
        pip install pip --upgrade
        pip install -r requirements-nr.txt
        pip install jupyter ipykernel
    - name: Run Notebooks
      run: |
        chmod +x run_olist.sh
        ./run_olist.sh

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: run-notebooks
    steps:
    - uses: actions/checkout@v4
    - name: Dockerize
      run: |
        docker login -u=${{ secrets.DOCKER_USERNAME }} -p=${{ secrets.DOCKER_PASSWORD }}
        docker build -t ${{ secrets.DOCKER_REGISTRY }}:latest ./API
        docker push ${{ secrets.DOCKER_REGISTRY }}:latest

  Deploy:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
    - uses: actions/checkout@v4
    - name: Render
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      run: |
        IMAGE_NAME="${{ secrets.DOCKER_REGISTRY }}:latest"
        curl -X POST "https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys" \
        -H "Authorization: Bearer ${RENDER_API_KEY}" \
        -H "Content-Type: application/json" \
        --data '{"image": "'${IMAGE_NAME}'"}'
